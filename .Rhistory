main = "Rentals each month")
plot(PDT, cust_total, panel.first = lines(PDT, Giants_Game*1400, type = 'h', col = "beige"),
type = 'l', col = "lightblue", xlab = "Date", ylab = "Number of rentals", ylim = c(25,500),
main = "Rentals each month")
plot(PDT, sub_total, panel.first = lines(PDT, Giants_Game*1400, type = 'h', col = "beige"),
type = 'l', col = "lightblue", xlab = "Date", ylab = "Number of rentals", ylim = c(25,500),
main = "Rentals each month")
plot(PDT, day_total, panel.first = lines(PDT, Giants_Game*1400, type = 'h', col = "beige"),
type = 'l', col = "lightblue", xlab = "Date", ylab = "Number of rentals", ylim = c(25,1400),
main = "Rentals each month")
plot(PDT, sub_total, panel.first = lines(PDT, Giants_Game*1400, type = 'h', col = "beige"),
type = 'l', col = "lightblue", xlab = "Date", ylab = "Number of rentals",
main = "Rentals each month")
plot(PDT, day_total, panel.first = lines(PDT, Giants_Game*1400, type = 'h', col = "beige"),
type = 'l', col = "lightblue", xlab = "Date", ylab = "Number of rentals",
main = "Rentals each month")
plot(PDT, day_total, panel.first = lines(PDT, Giants_Game*1400, type = 'h', col = "beige"),
type = 'l', col = "lightblue", xlab = "Date", ylab = "Number of rentals", ylim = c(25,1400),
main = "Rentals each month")
plot(PDT, day_total, panel.first = lines(PDT, Giants_Game*1400, type = 'h', col = "beige"),
type = 'l', col = "lightblue", xlab = "Date", ylab = "Number of rentals", ylim = c(50,1400),
main = "Rentals each month")
plot(PDT, day_total, panel.first = lines(PDT, Giants_Game*1400, type = 'h', col = "beige"),
type = 'l', col = "lightblue", xlab = "Date", ylab = "Number of rentals", ylim = c(100,1400),
main = "Rentals each month")
legend(locator(), c("Num Rentals", "Giants Game"), col = c("lightblue", "beige"))
plot(PDT, day_total, panel.first = lines(PDT, Giants_Game*1400, type = 'h', col = "beige"),
type = 'l', col = "lightblue", xlab = "Date", ylab = "Number of rentals", ylim = c(100,1400),
main = "Rentals each month")
legend(locator(), c("Num Rentals", "Giants Game"), col = c("lightblue", "beige"), pch = 1, cex = 0.8)
plot(PDT, day_total, panel.first = lines(PDT, Giants_Game*1400, type = 'h', col = "beige"),
type = 'l', col = "lightblue", xlab = "Date", ylab = "Number of rentals", ylim = c(100,1400),
main = "Rentals each month")
legend(locator(), c("Num Rentals", "Giants Game"), col = c("lightblue", "beige"), pch = 2, cex = 0.8)
?legend
plot(PDT, day_total, panel.first = lines(PDT, Giants_Game*1400, type = 'h', col = "beige"),
type = 'l', col = "lightblue", xlab = "Date", ylab = "Number of rentals", ylim = c(100,1400),
main = "Rentals each month")
legend(locator(), c("Num Rentals", "Giants Game"), col = c("lightblue", "beige"), pch = c('l', 'h'), cex = 0.8)
?legend
plot(PDT, day_total, panel.first = lines(PDT, Giants_Game*1400, type = 'h', col = "beige"),
type = 'l', col = "lightblue", xlab = "Date", ylab = "Number of rentals", ylim = c(100,1400),
main = "Rentals each month")
legend(locator(), c("Num Rentals", "Giants Game"), col = c("lightblue", "beige"), pch = c(-, 15), cex = 1)
plot(PDT, day_total, panel.first = lines(PDT, Giants_Game*1400, type = 'h', col = "beige"),
type = 'l', col = "lightblue", xlab = "Date", ylab = "Number of rentals", ylim = c(100,1400),
main = "Rentals each month")
legend(locator(), c("Num Rentals", "Giants Game"), col = c("lightblue", "beige"), pch = c("-", 15), cex = 1)
plot(PDT, day_total, panel.first = lines(PDT, Giants_Game*1400, type = 'h', col = "beige"),
type = 'l', col = "lightblue", xlab = "Date", ylab = "Number of rentals", ylim = c(100,1400),
main = "Rentals each month")
legend(locator(), c("Num Rentals", "Giants Game"), col = c("lightblue", "beige"), pch = c("-", 0), cex = 0.85)
plot(PDT, day_total, panel.first = lines(PDT, Giants_Game*1400, type = 'h', col = "beige"),
type = 'l', col = "lightblue", xlab = "Date", ylab = "Number of rentals", ylim = c(100,1400),
main = "Rentals each month")
legend(locator(), c("Num Rentals", "Giants Game"), col = c("lightblue", "beige"), pch = '-', cex = 0.85)
plot(PDT, day_total, panel.first = lines(PDT, Giants_Game*1400, type = 'h', col = "beige"),
type = 'l', col = "lightblue", xlab = "Date", ylab = "Number of rentals", ylim = c(100,1400),
main = "Rentals each month")
legend(locator(), c("Num Rentals", "Giants Game"), col = c("lightblue", "beige"), pch = '-', lwd = 2 cex = 0.85)
plot(PDT, day_total, panel.first = lines(PDT, Giants_Game*1400, type = 'h', col = "beige"),
type = 'l', col = "lightblue", xlab = "Date", ylab = "Number of rentals", ylim = c(100,1400),
main = "Rentals each month")
legend(locator(), c("Num Rentals", "Giants Game"), col = c("lightblue", "beige"), pch = '-', lwd = 2, cex = 0.85)
plot(PDT, day_total, panel.first = lines(PDT, Giants_Game*1400, type = 'h', col = "beige"),
type = 'l', col = "lightblue", xlab = "Date", ylab = "Number of rentals", ylim = c(100,1400),
main = "Rentals each day")
legend(locator(), c("Num Rentals", "Giants Game"), col = c("lightblue", "beige"), pch = '-', lwd = 2, cex = 0.85)
par(mfrow = c(2,1))
plot(PDT, day_total, type = 'l', col = "lightblue", xlab = "Date", ylab = "Number of rentals", main = "Rentals each day")
plot(PDT, Avg_Gas_Value, type = 'l', col = "brown", xlab = "Date", ylab = "Gas Prices", main = "Average Gas Prices")
lm.fit = lm(day_total~Avg_Gas_Value, data = SF_daily_bikeshare )
summary(lm.fit)
lm.fit = lm(day_total~Avg_Gas_Value + Giants_Game, data = SF_daily_bikeshare )
summary(lm.fit)
lm.fit = lm(day_total~Avg_Gas_Value + Giants_Game + SF_Event, data = SF_daily_bikeshare )
summary(lm.fit)
library(randomForest)
bag.bikes <- randomForest(day_total~.-day_total-PDT-sub_total-cust_total-PrecipitationIn, data = SF_daily_bikeshare ,subset =train, mtry= 29, importance =TRUE)
set.seed(101)
train <- sample(1:1083, 700)
library(randomForest)
bag.bikes <- randomForest(day_total~.-day_total-PDT-sub_total-cust_total-PrecipitationIn, data = SF_daily_bikeshare ,subset =train, mtry= 29, importance =TRUE)
bag.bikes
yhat.bag <- predict(bag.bikes, newdata = SF_daily_bikeshare[-train,])
plot(yhat.bag, bikes.test)
bikes.test <- SF_daily_bikeshare$day_total[-train]
plot(yhat.bag, bikes.test)
dev.off()
plot(yhat.bag, bikes.test)
abline(0,1, col = "red")
mean((yhat.bag - bikes.test)^2)
importance(bag.bikes)
varImpPlot(bag.bikes) # High values in matrix are good.
rf.bikes <- randomForest(day_total~.-day_total-PDT-sub_total-cust_total-PrecipitationIn,
data = SF_daily_bikeshare, subset = train,
mtry = 5, ntree = 100, importance = TRUE)
rf.bikes
yhat.rf <- predict(rf.bikes, newdata = SF_daily_bikeshare[-train,])
plot(yhat.rf, bikes.test)
abline(0,1, col = "red")
mean((yhat.rf - bikes.test)^2)
rf.sub_bikes <- randomForest(sub_total~.-sub_total-PDT-day_total-cust_total-PrecipitationIn,
data = SF_daily_bikeshare, subset = train,
mtry = 5, ntree = 100, importance = TRUE)
rf.sub_bikes
yhat.rf.sub <- predict(rf.sub_bikes, newdata = SF_daily_bikeshare[-train,])
sub_bikes.test <- SF_daily_bikeshare$sub_total[-train]
plot(yhat.rf, sub_bikes.test)
abline(0,1, col = "red")
mean((yhat.rf.sub - sub_bikes.test)^2)
rf.cust_bikes <- randomForest(cust_total~.-cust_total-PDT-sub_total-day_total-PrecipitationIn,
data = SF_daily_bikeshare, subset = train,
mtry = 5, ntree = 100, importance = TRUE)
rf.cust_bikes
cust_bikes.test <- SF_daily_bikeshare$cust_total[-train]
yhat.rf.cust <- predict(rf.cust_bikes, newdata = SF_daily_bikeshare[-train,])
plot(yhat.rf, cust_bikes.test)
abline(0,1, col = "red")
mean((yhat.rf.cust - cust_bikes.test)^2)
rf.cust_bikes
cust_bikes.test <- SF_daily_bikeshare$cust_total[-train]
plot(yhat.rf.sub, sub_bikes.test)
abline(0,1, col = "red")
mean((yhat.rf.sub - sub_bikes.test)^2)
plot(yhat.rf.cust, cust_bikes.test)
abline(0,1, col = "red")
mean((yhat.rf.cust - cust_bikes.test)^2)
mean(((yhat.rf.sub+yhat.rf.cust) - bikes.test)^2)
rf.sub_bikes <- randomForest(sub_total~.-sub_total-PDT-day_total-cust_total-PrecipitationIn,
data = SF_daily_bikeshare, subset = train,
mtry = 5, ntree = 100, importance = TRUE)
rf.sub_bikes
yhat.rf.sub <- predict(rf.sub_bikes, newdata = SF_daily_bikeshare[-train,])
sub_bikes.test <- SF_daily_bikeshare$sub_total[-train]
plot(yhat.rf.sub, sub_bikes.test)
abline(0,1, col = "red")
mean((yhat.rf.sub - sub_bikes.test)^2)
rf.cust_bikes <- randomForest(cust_total~.-cust_total-PDT-sub_total-day_total-PrecipitationIn,
data = SF_daily_bikeshare, subset = train,
mtry = 5, ntree = 100, importance = TRUE)
rf.cust_bikes
cust_bikes.test <- SF_daily_bikeshare$cust_total[-train]
yhat.rf.cust <- predict(rf.cust_bikes, newdata = SF_daily_bikeshare[-train,])
plot(yhat.rf.cust, cust_bikes.test)
abline(0,1, col = "red")
mean((yhat.rf.cust - cust_bikes.test)^2)
mean(((yhat.rf.sub+yhat.rf.cust) - bikes.test)^2)
lm.fit <- lm(day_total~.-day_total-Zip-PDT-sub_total-cust_total-PrecipitationIn, data = SF_daily_bikeshare[train,])
lm.fit <- lm(day_total~.-day_total-PDT-sub_total-cust_total-PrecipitationIn, data = SF_daily_bikeshare[train,])
summary(lm.fit)
par(mfrow = c(2,2))
plot(lm.fit)
dev.off()
lm.pred = predict(lm.fit, newdata = SF_daily_bikeshare[-train,-31])
lm.pred = predict(lm.fit, newdata = SF_daily_bikeshare[-train,])
View(SF_daily_bikeshare)
lm.fit <- lm(sub_total~. -day_total-PDT-cust_total-day_total-PrecipitationIn, data = SF_daily_bikeshare[train,])
lm.fit <- lm(sub_total~. -sub_total-day_total-PDT-cust_total-day_total-PrecipitationIn, data = SF_daily_bikeshare[train,])
summary(lm.fit)
par(mfrow = c(2,2))
plot(lm.fit)
dev.off()
lm.pred_sub = predict(lm.fit, newdata = SF_daily_bikeshare[-train,])
lm.pred_sub = predict(lm.fit, newdata = SF_daily_bikeshare[-train,-31])
lm.pred_sub = predict(lm.fit, newdata = SF_daily_bikeshare[-train,])
SF_daily_bikeshare <- SF_daily_bikeshare[,-31]
lm.fit <- lm(sub_total~. -sub_total-day_total-PDT-cust_total-day_total, data = SF_daily_bikeshare[train,])
summary(lm.fit)
par(mfrow = c(2,2))
plot(lm.fit)
dev.off()
lm.pred_sub = predict(lm.fit, newdata = SF_daily_bikeshare[-train,])
test.vals <- SF_daily_bikeshare$sub_total[-train]
mean((test.vals - lm.pred_sub)^2)
lm.fit <- lm(cust_total ~.-cust_total-PDT-sub_total-day_total, data = SF_daily_bikeshare[train,])
summary(lm.fit)
lm.pred_cust = predict(lm.fit, newdata = SF_daily_bikeshare[-train,])
test.vals_cust <- SF_daily_bikeshare$cust_total[-train]
mean((test.vals_cust - lm.pred_cust)^2)
library(boot)
glm.fit <- glm(day_total ~.-day_total-PDT-sub_total-cust_total, data=SF_daily_bikeshare)
cv_error <- cv.glm(SF_daily_bikeshare, glm.fit, K= 10)
cv_error$delta[1]
glm.fit <- glm(day_total ~.-cust_total-Zip-PDT-sub_total-day_total, data=SF_daily_bikeshare)
glm.fit <- glm(day_total ~.-cust_total-PDT-sub_total-day_total, data=SF_daily_bikeshare)
cv_error <- cv.glm(SF_daily_bikeshare, glm.fit, K= 10)
cv_error$delta[1]
glm.fit <- glm(day_total ~.-day_total-PDT-sub_total-cust_total, data=SF_daily_bikeshare)
cv_error <- cv.glm(SF_daily_bikeshare, glm.fit, K= 10)
cv_error$delta[1]
glm.fit <- glm(day_total ~.-day_total-PDT-sub_total-cust_total, data=SF_daily_bikeshare)
cv_error <- cv.glm(SF_daily_bikeshare, glm.fit, K= 10)
cv_error$delta[1]
glm.fit <- glm(day_total ~.-cust_total-PDT-sub_total-day_total, data=SF_daily_bikeshare)
cv_error <- cv.glm(SF_daily_bikeshare, glm.fit, K= 10)
cv_error$delta[1]
glm.fit <- glm(sub_total ~.-cust_total-PDT-sub_total-day_total, data=SF_daily_bikeshare)
cv_error <- cv.glm(SF_daily_bikeshare, glm.fit, K= 10)
cv_error$delta[1]
glm.fit <- glm(sub_total ~.-cust_total-PDT-sub_total-day_total, data=SF_daily_bikeshare)
cv_error <- cv.glm(SF_daily_bikeshare, glm.fit, K= 10)
cv_error$delta[1]
warnings()
glm.fit <- glm(cust_total ~.-Zip-PDT-sub_total-day_total, data=SF_daily_bikeshare)
cv_error <- cv.glm(SF_daily_bikeshare, glm.fit, K= 10)
cv_error$delta[1]
glm.fit
glm.fit <- glm(day_total ~.-day_total-PDT-sub_total-cust_total, data=SF_daily_bikeshare)
cv_error <- cv.glm(SF_daily_bikeshare, glm.fit, K= 10)
cv_error
glm.fit <- glm(cust_total ~.-Zip-PDT-sub_total-day_total, data=SF_daily_bikeshare)
cv_error <- cv.glm(SF_daily_bikeshare, glm.fit, K= 10)
cv_error$delta[1]
glm.fit <- glm(cust_total ~.-Zip-PDT-sub_total-day_total, data=SF_daily_bikeshare)
cv_error <- cv.glm(SF_daily_bikeshare, glm.fit, K= 10)
glm.fit <- glm(cust_total ~.-PDT-sub_total-day_total, data=SF_daily_bikeshare)
cv_error <- cv.glm(SF_daily_bikeshare, glm.fit, K= 10)
cv_error$delta[1]
glm.fit <- glm(cust_total ~.-PDT-sub_total-day_total, data=SF_daily_bikeshare)
cv_error <- cv.glm(SF_daily_bikeshare, glm.fit, K= 10)
cv_error$delta[1]
glm.fit <- glm(cust_total ~.-PDT-sub_total-day_total, data=SF_daily_bikeshare)
cv_error <- cv.glm(SF_daily_bikeshare, glm.fit, K= 10)
cv_error$delta[1]
glm.fit <- glm(cust_total ~.-PDT-sub_total-day_total, data=SF_daily_bikeshare)
cv_error <- cv.glm(SF_daily_bikeshare, glm.fit, K= 10)
cv_error$delta[1]
regfit.full = regsubsets(day_total~.-Zip-PDT-cust_total-sub_total,data = SF_daily_bikeshare, method = "forward", nvmax = 30)
library(leaps)
regfit.full = regsubsets(day_total~.-Zip-PDT-cust_total-sub_total,data = SF_daily_bikeshare, method = "forward", nvmax = 30)
regfit.full = regsubsets(day_total~.-PDT-cust_total-sub_total,data = SF_daily_bikeshare, method = "forward", nvmax = 30)
regfit.full = regsubsets(day_total~.-day_total-PDT-cust_total-sub_total,data = SF_daily_bikeshare, method = "forward", nvmax = 30)
regfit.full
regfit.summary = summary(regfit.full)
regfit.summary$which
plot(regfit.full, scale = "adjr2")
which.max(regfit.summary$adjr2)
points (18, regfit.summary$adjr2[18], col ="red",cex =2, pch =20)
plot(regfit.summary$adjr2, col = "darkblue", xlab = "Number of predictors", ylab = "Adjusted R^2", main = "Best Subset Selection", type = 'l')
which.max(regfit.summary$adjr2)
points (18, regfit.summary$adjr2[18], col ="red",cex =2, pch =20)
?regfit
?regsubsets
regfit.summary = summary(regfit.full)
regfit.summary
plot(regfit.full, scale = "adjr2")
par(mfrow = c(2,1))
plot(regfit.full, scale = "adjr2")
plot(regfit.summary$adjr2, col = "darkblue", xlab = "Number of predictors", ylab = "Adjusted R^2", main = "Best Subset Selection", type = 'l')
which.max(regfit.summary$adjr2)
points (18, regfit.summary$adjr2[18], col ="red",cex =2, pch =20)
par(mfrow = c(2,1))
plot(regfit.full, scale = "adjr2")
par(mfrow = c(1,2))
plot(regfit.full, scale = "adjr2")
plot(regfit.summary$adjr2, col = "darkblue", xlab = "Number of predictors", ylab = "Adjusted R^2", main = "Best Subset Selection", type = 'l')
which.max(regfit.summary$adjr2)
points (18, regfit.summary$adjr2[18], col ="red",cex =2, pch =20)
regfit.full = regsubsets(day_total~.-day_total-PDT-cust_total-sub_total,data = SF_daily_bikeshare[train,], method = "forward", nvmax = 30)
regfit.full
regfit.summary = summary(regfit.full)
regfit.summary$which
par(mfrow = c(1,2))
plot(regfit.full, scale = "adjr2")
plot(regfit.summary$adjr2, col = "darkblue", xlab = "Number of predictors", ylab = "Adjusted R^2", main = "Best Subset Selection", type = 'l')
which.max(regfit.summary$adjr2)
points (16, regfit.summary$adjr2[18], col ="red",cex =2, pch =20)
?model.matrix
val.errors = rep(NA,32)
for (i in 1:32){
coefi = coef(regfit.best, id=i)
pred = test.mat[,names(coefi)]%*%coefi
val.errors[i] = mean((Hitters$Salary[test]-pred)^2)
}
val.errors[i] = mean((SF_daily_bikeshare$day_total[-train]-pred)^2)
for (i in 1:32){
coefi = coef(regfit.forward, id=i)
pred = test.mat[,names(coefi)]%*%coefi
val.errors[i] = mean((SF_daily_bikeshare$day_total[-train]-pred)^2)
}
regfit.forward = regsubsets(day_total~.-day_total-PDT-cust_total-sub_total,data = SF_daily_bikeshare[train,], method = "forward", nvmax = 30)
test.matrix = model.matrix(day_total~.-day_total-PDT-cust_total-sub_total, data = SF_daily_bikeshare[train,])
val.errors = rep(NA,32)
for (i in 1:32){
coefi = coef(regfit.forward, id=i)
pred = test.mat[,names(coefi)]%*%coefi
val.errors[i] = mean((SF_daily_bikeshare$day_total[-train]-pred)^2)
}
for (i in 1:32){
coefi = coef(regfit.forward, id=i)
pred = test.matrix[,names(coefi)]%*%coefi
val.errors[i] = mean((SF_daily_bikeshare$day_total[-train]-pred)^2)
}
warings()
warnings()
coef(regfit.forward, id = 1)
coef(regfit.forward, id = 1)$names
coef(regfit.forward, id = 1)
names(coef(regfit.forward, id = 1))
regfit.forward = regsubsets(day_total~.-day_total-PDT-cust_total-sub_total,data = SF_daily_bikeshare[train,], method = "forward", nvmax = 30)
regfit.forward
regfit.full = regsubsets(day_total~.-day_total-PDT-cust_total-sub_total,data = SF_daily_bikeshare[train,], method = "forward", nvmax = 30)
regfit.full
regfit.summary = summary(regfit.full)
regfit.summary$which
par(mfrow = c(1,2))
plot(regfit.full, scale = "adjr2")
plot(regfit.summary$adjr2, col = "darkblue", xlab = "Number of predictors", ylab = "Adjusted R^2", main = "Best Subset Selection", type = 'l')
which.max(regfit.summary$adjr2)
points (16, regfit.summary$adjr2[16], col ="red",cex =2, pch =20)
names(coef(regfit.forward, id = 16))
vars <- names(coef(regfit.forward, id = 16))
vars
vars <- vars[-1]
vars
regfit.best = lm(day_total~%*%vars, data = SF_daily_bikeshare[train,])
regfit.best = lm(day_total~ %+%vars, data = SF_daily_bikeshare[train,])
dim(vars)
vars[1]
vars
vars
lm.fit = lm(day_total~ duration_total+weekday+MeanDew.PointF+Min.Sea.Level.PressureIn+
WindDirDegrees+cust_dur_total+sub_dur_total+year+Min.Humidity+
Max.VisibilityMiles+Giants_Game+day+Mean.TemperatureF+Mean.Sea.Level.PressureIn+
Min.VisibilityMiles+Avg_Gas_Value, data = SF_daily_bikeshare[train,])
summary(lm.fit)
lm.pred = predict(lm.fit, newdata = SF_daily_bikeshare[-train,])
test.vals <- SF_daily_bikeshare$day_total[-train]
mean((test.vals - lm.pred)^2)
regfit.sub = regsubsets(sub_total~.-day_total-PDT-cust_total-sub_total,data = SF_daily_bikeshare[train,], method = "forward", nvmax = 30)
regfit.full
regfit.summary = summary(regfit.full)
regfit.summary$which
par(mfrow = c(1,2))
plot(regfit.full, scale = "adjr2")
plot(regfit.summary$adjr2, col = "darkblue", xlab = "Number of predictors", ylab = "Adjusted R^2", main = "Best Subset Selection", type = 'l')
which.max(regfit.summary$adjr2)
points (16, regfit.summary$adjr2[16], col ="red",cex =2, pch =20)
vars <- names(coef(regfit.forward, id = 16))
vars <- vars[-1]
vars
lm.regfit = lm(sub_total~ duration_total+weekday+MeanDew.PointF+Min.Sea.Level.PressureIn+
WindDirDegrees+cust_dur_total+sub_dur_total+year+Min.Humidity+
Max.VisibilityMiles+Giants_Game+day+Mean.TemperatureF+Mean.Sea.Level.PressureIn+
Min.VisibilityMiles+Avg_Gas_Value, data = SF_daily_bikeshare[train,])
lm.pred_sub = predict(lm.regfit, newdata = SF_daily_bikeshare[-train,])
test.vals <- SF_daily_bikeshare$sub_total[-train]
mean((test.vals - lm.pred_sub)^2)
?regsubsets
regfit.full = regsubsets(day_total~.-day_total-PDT-cust_total-sub_total,data = SF_daily_bikeshare[train,], method = "forward", nvmax = 15)
regfit.full
regfit.summary = summary(regfit.full)
regfit.summary$which
par(mfrow = c(1,2))
plot(regfit.full, scale = "adjr2")
plot(regfit.summary$adjr2, col = "darkblue", xlab = "Number of predictors", ylab = "Adjusted R^2", main = "Best Subset Selection", type = 'l')
which.max(regfit.summary$adjr2)
regfit.full = regsubsets(day_total~.-day_total-PDT-cust_total-sub_total,data = SF_daily_bikeshare[train,], method = "forward", nvmax = 10)
regfit.full
regfit.summary = summary(regfit.full)
regfit.summary$which
par(mfrow = c(1,2))
plot(regfit.full, scale = "adjr2")
plot(regfit.summary$adjr2, col = "darkblue", xlab = "Number of predictors", ylab = "Adjusted R^2", main = "Best Subset Selection", type = 'l')
which.max(regfit.summary$adjr2)
points (11, regfit.summary$adjr2[16], col ="red",cex =2, pch =20)
points (11, regfit.summary$adjr2[11], col ="red",cex =2, pch =20)
vars <- names(coef(regfit.forward, id = 11))
vars <- vars[-1]
vars
lm.regfit = lm(day_total~ duration_total+weekday+WindDirDegrees+cust_dur_total+
sub_dur_total+year+Max.VisibilityMiles+Giants_Game+
day+Mean.TemperatureF+Mean.Sea.Level.PressureIn
, data = SF_daily_bikeshare[train,])
lm.pred = predict(lm.regfit, newdata = SF_daily_bikeshare[-train,])
test.vals <- SF_daily_bikeshare$day_total[-train]
mean((test.vals - lm.pred)^2)
regfit.full = regsubsets(day_total~.-day_total-PDT-cust_total-sub_total,data = SF_daily_bikeshare[train,], method = "forward", nvmax = 8)
regfit.full
regfit.summary = summary(regfit.full)
regfit.summary$which
par(mfrow = c(1,2))
plot(regfit.full, scale = "adjr2")
plot(regfit.summary$adjr2, col = "darkblue", xlab = "Number of predictors", ylab = "Adjusted R^2", main = "Best Subset Selection", type = 'l')
which.max(regfit.summary$adjr2)
points (11, regfit.summary$adjr2[11], col ="red",cex =2, pch =20)
vars <- names(coef(regfit.forward, id = ))
vars <- names(coef(regfit.forward, id = 9))
vars <- vars[-1]
vars
lm.regfit = lm(day_total~ duration_total+WindDirDegrees+cust_dur_total+
sub_dur_total+year+Max.VisibilityMiles+Giants_Game+
day+Mean.TemperatureF,
data = SF_daily_bikeshare[train,])
lm.pred = predict(lm.regfit, newdata = SF_daily_bikeshare[-train,])
test.vals <- SF_daily_bikeshare$day_total[-train]
mean((test.vals - lm.pred)^2)
glm.fit <- glm(day_total ~duration_total+WindDirDegrees+cust_dur_total+
sub_dur_total+year+Max.VisibilityMiles+Giants_Game+
day+Mean.TemperatureF, data=SF_daily_bikeshare)
cv_error <- cv.glm(SF_daily_bikeshare, glm.fit, K= 10)
cv_error$delta[1]
.-day_total-PDT-sub_total-cust_total
glm.fit <- glm(day_total ~.-day_total-PDT-sub_total-cust_total, data=SF_daily_bikeshare)
cv_error <- cv.glm(SF_daily_bikeshare, glm.fit, K= 10)
cv_error$delta[1]
glm.fit <- glm(day_total ~.-day_total-PDT-sub_total-cust_total, data=SF_daily_bikeshare)
cv_error <- cv.glm(SF_daily_bikeshare, glm.fit, K= 10)
cv_error$delta[1]
# MSE of 13332.51
glm.fit <- glm(sub_total ~.-cust_total-PDT-sub_total-day_total, data=SF_daily_bikeshare)
cv_error <- cv.glm(SF_daily_bikeshare, glm.fit, K= 10)
cv_error$delta[1]
# MSE of 13494.81
glm.fit <- glm(cust_total ~.-PDT-sub_total-day_total, data=SF_daily_bikeshare)
cv_error <- cv.glm(SF_daily_bikeshare, glm.fit, K= 10)
cv_error$delta[1]
glm.fit <- glm(sub_total ~.-cust_total-PDT-sub_total-day_total, data=SF_daily_bikeshare)
cv_error <- cv.glm(SF_daily_bikeshare, glm.fit, K= 10)
cv_error$delta[1]
glm.fit <- glm(sub_total ~.-cust_total-PDT-sub_total-day_total, data=SF_daily_bikeshare)
cv_error <- cv.glm(SF_daily_bikeshare, glm.fit, K= 10)
cv_error$delta[1]
glm.fit <- glm(sub_total ~.-cust_total-PDT-sub_total-day_total, data=SF_daily_bikeshare)
cv_error <- cv.glm(SF_daily_bikeshare, glm.fit, K= 12)
cv_error$delta[1]
glm.fit <- glm(sub_total ~.-cust_total-PDT-sub_total-day_total, data=SF_daily_bikeshare)
cv_error <- cv.glm(SF_daily_bikeshare, glm.fit, K= 20)
cv_error$delta[1]
glm.fit <- glm(day_total ~.-day_total-PDT-sub_total-cust_total, data=SF_daily_bikeshare)
cv_error <- cv.glm(SF_daily_bikeshare, glm.fit, K= 20)
cv_error$delta[1]
glm.fit <- glm(day_total ~.-day_total-PDT-sub_total-cust_total, data=SF_daily_bikeshare)
cv_error <- cv.glm(SF_daily_bikeshare, glm.fit, K= 5)
cv_error$delta[1]
glm.fit <- glm(day_total ~.duration_total+WindDirDegrees+cust_dur_total+
sub_dur_total+year+Max.VisibilityMiles+Giants_Game+
day+Mean.TemperatureF, , data=SF_daily_bikeshare)
cv_error <- cv.glm(SF_daily_bikeshare, glm.fit, K= 10)
cv_error$delta[1]
glm.fit <- glm(day_total ~duration_total+WindDirDegrees+cust_dur_total+
sub_dur_total+year+Max.VisibilityMiles+Giants_Game+
day+Mean.TemperatureF, , data=SF_daily_bikeshare)
cv_error <- cv.glm(SF_daily_bikeshare, glm.fit, K= 10)
cv_error$delta[1]
regfit.full = regsubsets(day_total~.-day_total-PDT-cust_total-sub_total,data = SF_daily_bikeshare[train,], method = "forward", nvmax = 12)
regfit.full
regfit.summary = summary(regfit.full)
regfit.summary$which
par(mfrow = c(1,2))
plot(regfit.full, scale = "adjr2")
plot(regfit.summary$adjr2, col = "darkblue", xlab = "Number of predictors", ylab = "Adjusted R^2", main = "Best Subset Selection", type = 'l')
which.max(regfit.summary$adjr2)
points (11, regfit.summary$adjr2[11], col ="red",cex =2, pch =20)
points (13, regfit.summary$adjr2[11], col ="red",cex =2, pch =20)
vars <- names(coef(regfit.forward, id = 9))
vars <- vars[-1]
vars
regfit.sub = regsubsets(sub_total~.-day_total-PDT-cust_total-sub_total,data = SF_daily_bikeshare[train,], method = "forward", nvmax = 30)
regfit.full
regfit.summary = summary(regfit.full)
regfit.summary$which
par(mfrow = c(1,2))
plot(regfit.full, scale = "adjr2")
plot(regfit.summary$adjr2, col = "darkblue", xlab = "Number of predictors", ylab = "Adjusted R^2", main = "Best Subset Selection", type = 'l')
which.max(regfit.summary$adjr2)
points (13, regfit.summary$adjr2[13], col ="red",cex =2, pch =20)
regfit.sub = regsubsets(sub_total~.-day_total-PDT-cust_total-sub_total,data = SF_daily_bikeshare[train,], method = "forward", nvmax = 30)
regfit.full
regfit.summary = summary(regfit.full)
regfit.summary$which
par(mfrow = c(1,2))
plot(regfit.full, scale = "adjr2")
plot(regfit.summary$adjr2, col = "darkblue", xlab = "Number of predictors", ylab = "Adjusted R^2", main = "Best Subset Selection", type = 'l')
which.max(regfit.summary$adjr2)
points (13, regfit.summary$adjr2[13], col ="red",cex =2, pch =20)
vars <- names(coef(regfit.forward, id = 13))
vars <- vars[-1]
vars
glm.fit <- glm(sub_total ~.duration_total+weekday+Mean.Sea.Level.PressureIn+
WindDirDegrees+cust_dur_total+sub_dur_total+year+
glm.fit <- glm(sub_total ~duration_total+weekday+Mean.Sea.Level.PressureIn+
WindDirDegrees+cust_dur_total+sub_dur_total+year+
Max.VisibilityMiles+Giants_Game+day+Mean.TemperatureF+
Min.VisibilityMiles+Avg_Gas_Value, data=SF_daily_bikeshare)
cv_error <- cv.glm(SF_daily_bikeshare, glm.fit, K= 10)
cv_error$delta[1]
glm.fit <- glm(sub_total ~duration_total+weekday+Mean.Sea.Level.PressureIn+
WindDirDegrees+cust_dur_total+sub_dur_total+year+
Max.VisibilityMiles+Giants_Game+day+Mean.TemperatureF+
Min.VisibilityMiles+Avg_Gas_Value, data=SF_daily_bikeshare)
cv_error <- cv.glm(SF_daily_bikeshare, glm.fit, K= 10)
cv_error$delta[1]
lm.regfit = lm(sub_total~ duration_total+weekday+Mean.Sea.Level.PressureIn+
WindDirDegrees+cust_dur_total+sub_dur_total+year+
Max.VisibilityMiles+Giants_Game+day+Mean.TemperatureF+
Min.VisibilityMiles+Avg_Gas_Value, data = SF_daily_bikeshare[train,])
summary(lm.regfit)
regfit.sub = regsubsets(cust_total~.-day_total-PDT-cust_total-sub_total,data = SF_daily_bikeshare[train,], method = "forward", nvmax = 30)
regfit.full
regfit.summary = summary(regfit.full)
regfit.summary$which
regfit.cust = regsubsets(cust_total~.-day_total-PDT-cust_total-sub_total,data = SF_daily_bikeshare[train,], method = "forward", nvmax = 30)
regfit.full
regfit.summary = summary(regfit.full)
regfit.summary$which
par(mfrow = c(1,2))
plot(regfit.full, scale = "adjr2")
plot(regfit.summary$adjr2, col = "darkblue", xlab = "Number of predictors", ylab = "Adjusted R^2", main = "Best Subset Selection", type = 'l')
which.max(regfit.summary$adjr2)
points (13, regfit.summary$adjr2[13], col ="red",cex =2, pch =20)
